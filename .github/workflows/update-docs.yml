name: Update API Documentation

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install widdershins
      run: npm install -g widdershins
      
    - name: Download OpenAPI spec
      run: curl -o openapi.json https://api.frauddi.com/openapi.json
        
    - name: Convert OpenAPI and fix FastAPI references
      run: |
        widdershins openapi.json \
          --language_tabs 'shell:cURL' 'javascript:JavaScript' 'python:Python' \
          --summary --code --httpsnippet --theme darkula --search false \
          -o temp_docs.md
        
        # Fix FastAPI references immediately
        sed -i 's/FastAPI v0\.1\.0/Frauddi API v1.0/g' temp_docs.md
        sed -i 's/FastAPI/Frauddi API/g' temp_docs.md
        
    - name: Create bilingual documentation
      run: |
        cat > source/index.html.md << 'EOF'
        ---
        title: Frauddi API Reference
        language_tabs:
          - shell: cURL
          - javascript: JavaScript  
          - python: Python
        toc_footers:
          - <a href='https://frauddi.com'>Back to Frauddi</a>
          - <a href='mailto:support@frauddi.com'>Support</a>
        includes:
          - errors
        search: true
        code_clipboard: true
        logo: logo.png
        meta:
          - name: description
            content: Official API documentation for Frauddi
        ---
        
        <style>
        .language-selector {
          position: fixed !important;
          top: 20px !important;
          right: 20px !important;
          z-index: 9999 !important;
          background: #16B798 !important;
          padding: 10px !important;
          border-radius: 5px !important;
        }
        .language-selector select {
          background: white !important;
          color: #333 !important;
          border: 2px solid #16B798 !important;
          padding: 5px 10px !important;
          border-radius: 3px !important;
          font-size: 14px !important;
          cursor: pointer !important;
        }
        .content-es, .api-content-es, .errors-es { display: none; }
        </style>
        
        <div class="language-selector">
          <select id="language-select" onchange="switchLanguage(this.value)">
            <option value="en">🇺🇸 English</option>
            <option value="es">🇪🇸 Español</option>
          </select>
        </div>
        
        <script>
        function switchLanguage(lang) {
          document.querySelectorAll('.content-en, .api-content-en, .errors-en').forEach(el => 
            el.style.display = lang === 'en' ? 'block' : 'none'
          );
          document.querySelectorAll('.content-es, .api-content-es, .errors-es').forEach(el => 
            el.style.display = lang === 'es' ? 'block' : 'none'
          );
          localStorage.setItem('frauddi-api-lang', lang);
        }
        document.addEventListener('DOMContentLoaded', function() {
          const savedLang = localStorage.getItem('frauddi-api-lang') || 'en';
          document.getElementById('language-select').value = savedLang;
          switchLanguage(savedLang);
        });
        </script>
        
        <div class="content-en">
        # Frauddi API
        Welcome to the **Frauddi API**! Integrate advanced fraud detection capabilities.
        Base URL: `https://api.frauddi.com`
        
        ## Authentication
        ```shell
        curl "https://api.frauddi.com/api/v0/endpoint" \
          -H "Authorization: Bearer YOUR_API_KEY"
        ```
        Frauddi uses API keys for authentication. Include your key in the Authorization header.
        </div>
        
        <div class="content-es" style="display: none;">
        # API de Frauddi
        ¡Bienvenido a la **API de Frauddi**! Integra capacidades avanzadas de detección de fraude.
        URL Base: `https://api.frauddi.com`
        
        ## Autenticación
        ```shell
        curl "https://api.frauddi.com/api/v0/endpoint" \
          -H "Authorization: Bearer TU_CLAVE_API"
        ```
        Frauddi utiliza claves API para autenticación. Incluye tu clave en el header Authorization.
        </div>
        
        <div class="api-content-en">
        EOF
        
        # Add English API content
        tail -n +20 temp_docs.md >> source/index.html.md
        
        echo '</div>' >> source/index.html.md
        echo '<div class="api-content-es" style="display: none;">' >> source/index.html.md
        
        # Add Spanish API content
        sed 's/Frauddi API v1.0/API de Frauddi v1.0/g' temp_docs.md | tail -n +20 >> source/index.html.md
        
        echo '</div>' >> source/index.html.md
        
    - name: Create errors file
      run: |
        mkdir -p source/includes
        cat > source/includes/_errors.md << 'EOF'
        <div class="errors-en">
        # Errors
        The Frauddi API uses conventional HTTP response codes.
        
        Error Code | Meaning
        ---------- | -------
        400 | Bad Request
        401 | Unauthorized
        404 | Not Found
        500 | Internal Server Error
        </div>
        
        <div class="errors-es" style="display: none;">
        # Errores
        La API de Frauddi utiliza códigos de respuesta HTTP convencionales.
        
        Código | Significado
        ------- | -----------
        400 | Solicitud Incorrecta
        401 | No Autorizado
        404 | No Encontrado
        500 | Error del Servidor
        </div>
        EOF
        
    - name: Add Frauddi branding
      run: |
        mkdir -p source/images
        curl -L "https://3l1070r.wordpress.com/wp-content/uploads/2025/09/logo.png" -o source/images/logo.png
        
        cat >> source/stylesheets/screen.css.scss << 'EOF'
        .tocify-wrapper .logo {
          background-image: url('../images/logo.png');
          background-size: contain;
          background-repeat: no-repeat;
          background-position: center;
          height: 40px;
          margin: 15px auto 25px auto;
          width: 120px;
          padding: 5px;
        }
        h1 { color: #16B798; border-bottom: 2px solid #16B798; }
        h2 { color: #128a75; }
        a { color: #16B798; }
        .tocify-wrapper > .search { background: #16B798; }
        .tocify-wrapper .tocify-item.active > .tocify-link { background-color: #16B798; }
        EOF
        
    - name: Install and build
      run: |
        bundle install
        bundle exec middleman build --clean
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        force_orphan: true
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "Auto-update API docs [skip ci]"
        git push || echo "Push failed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
